name: CD - Deploy Spring Boot to ECS Fargate

on:
  workflow_run:
    workflows: ["CI - RealtimeLeaderBoard", "CI- CodeQL - Scan security","CI - Terraform ECS Deployment"]
    types:
      - completed

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build Spring Boot JAR
        run: mvn -B clean package -DskipTests

      - name: Build & Push Docker image
        run: |
          IMAGE=${{ secrets.DOCKERHUB_USERNAME }}/leaderboard-app:${{ github.sha }}
          docker build -t $IMAGE .
          echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
          docker push $IMAGE
        env:
          DOCKER_CLI_EXPERIMENTAL: enabled

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1   # region ECS cluster

      # Update ECS service with new image
      - name: Deploy to ECS
        run: |
          IMAGE=${{ secrets.DOCKERHUB_USERNAME }}/leaderboard-app:${{ github.sha }}
          echo "Deploying image $IMAGE to ECS..."

          aws ecs update-service \
            --cluster leaderboard-app \
            --service leaderboard-app \
            --force-new-deployment \
            --region ap-southeast-1